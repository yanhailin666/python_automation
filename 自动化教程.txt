1.八大元素定位：(以百度为例)
	1.通过id定位
	driver.find_element_by_id("").send_keys()
	
	2.通过name进行定位
	driver.find_element_by_name("").send_keys()
	
	3.通过classs_name进行定位
	driver.find_element_by_class_name("").send_keys()
	
	4.通过link_text定位（针对a标签）需要保证文字唯一
	driver.find_element_by_linl_text("新闻").click()
	
	5.通过partail_link_text定位（针对a标签）需要保证文字唯一
	driver.find_element_by_partail_linl_text("新").click()
	
	6.通过标签名（基本不用，很难唯一）
	driver.find_element_by_tag_name("from").get_attribute("name")
	
	7.通过xpath定位("/"一个斜杆是绝对路径,"//"两个斜杆是相对路径)
		1.driver.find_element_by_xpath("/html/body/div/div/span/input").send_keys()#复制的xpath路径
		2.driver.find_element_by_xpath("//from/span/input").send_keys()
		3.driver.find_element_by_xpath("//from/span[1]/input").send_keys()
		4.driver.find_element_by_xpath("//from/span[2]/input").send_keys()#索引定位
		5.driver.find_element_by_xpath("//inmut[@autocomplete='off']").send_keys()#属性定位
		6.driver.find_element_by_xpath("//inmut[@autocomplete='off'and @name='wd']").send_keys()#属性组合定位，必须加@
		7.driver.find_element_by_xpath("//inmut[starts-with(@autocomplete,'of')]").send_keys()#部分属性值
		8.driver.find_element_by_xpath("//inmut[substring(@class,3)='ipt')]").send_keys()#部分属性值
		9.driver.find_element_by_xpath("//inmut[(contains@class,'py')='ipt')]").send_keys()#部分属性值
		10.driver.find_element_by_xpath("//span[test()='按图片搜索']").get_attribute("style")#通过文本定位
		11.driver.find_element_by_xpath("//a[contains(text(),'新闻')]").click()#组合定位
		12.driver.find_element_by_xpath("//from[@id='from']/span[1]/input").click()#组合定位
		
	8.通过css定位
		1.driver.find_element_by_css_selector("绝对路径，复制浏览器的css路径").send_keys()
		2.driver.find_element_by_css_selector("#kw").send_keys()#相对路径
		3.driver.find_element_by_css_selector("input#kw").send_keys()#相对路径
		4.driver.find_element_by_css_selector("input.s_ipt").send_keys()#相对路径
		5.driver.find_element_by_css_selector("input[autocomplete='off']").send_keys()#属性定位
		6.driver.find_element_by_css_selector("input[autocomplete='off'][name='wd']").send_keys()#属性定位
		7.driver.find_element_by_css_selector("input[autocomplete^='of']").send_keys()#部分属性定位
		8.driver.find_element_by_css_selector("input[autocomplete$='of']").send_keys()#部分属性定位
		9.driver.find_element_by_css_selector("input[autocomplete*='ff']").send_keys()#部分属性定位
		10.driver.find_element_by_css_selector("div#s-top-left a:nth-child(1)").click()#通过空格和>查子元素（只能一级一级找）
		11.driver.find_element_by_css_selector("div#s-top-left a +a").click()#通过兄弟元素
		
		
2.自动化框架中封装定位
	1.driver.find_element(By.ID,"kw").send_keys()
	2.元素不可用处理方案 is_enadled()
		js="document.getElementByid('username'#不可用元素id).removeAttribute('disabled')"
		driver.execute_script(js)
		
	3.元素不可见处理方案 is_displayed()
		js=document.getElementByid("username").style.display=""
		driver.execute_script(js)
		
	4.判断是否被选中：is_selected()
	
	5.打印元素标签：.tag_name
	
	6.打印元素宽高: .size
	
	7.打印元素的坐标：.location #注意这个坐标是浏览器最大化，从左上角开始
	
3.鼠标操作
	1.左键单击
	ele.click()
	ActionChains(driver).click(ele2).perform()
	
	2.右键单击
	ActionChains(driver).context_click(ele).perform()
	
	3.双击
	ActionChains(driver).double_click().perform()
	
	4.长按
	ActionChains(driver).click_and_hold(ele).perform()
	
	5.悬浮到元素
	ActionChains(driver).move_to_element(xinwen).perform()
	
	6.悬浮到坐标
	ActionChains(driver).move_by_offset(xinwen.location["x"],xinwen.location["y"]).perform()
	
	7.拖拽：只能拖动到目标元素的中间
	ActionChains(driver).drag_and_drop(ele1,ele2).perform()
	
	8.把元素拖拽到一个坐标(窗口最大化)
	ActionChains(driver).drag_and_drop_by_offset(ele,ele2.location["x"]-ele2.size["width"],ele2.location["y"]).perform()
	
4.键盘操作
	1.单个
	ele.send_keys(Keys.ENTER)
	ActionChains(driver).send_keys(Keys.ENTER).perform()
	
	2.组合键
	ele.send_keys(Keys.CONTROL,'c')#复制
	
	ele.send_keys(Keys.CONTROL,'v')#粘贴
	
5.匿名函数
	sum=lambda x,y:x+y
	print(sum(10,20))
	
6.三类等待
	1.线程等待（强制等待）
	tim.sleep(1)
	
	2.智能等待（隐式等待）作用于整个网页（html，js，css）
	driver.implicitly_wait(5)
	
	3.显示等待（作用于一个元素）
	WebDriverWait(driver,5,poll_fiequency=0.5).until(lambda x:x.find_element(By.ID,"kwss"),message="元素未找到")
	
7.元素定位封装
	import time
    import unittest
    from selenium import webdriver
    from selenium.webdriver.common.by import By
    from selenium.webdriver.support.wait import WebDriverWait


    class LoginShopnc(unittest.TestCase):
        def setUP(self) -> None:

            self.driver = webdriver.Chrome()
            self.driver.implicitly_wait(10)
            self.driver.get()


        # 元素定位封装
        def location_element(self, args):
            try:
                return WebDriverWait(self.driver, 10).until(lambda x: x.find_element(*args))
            except Exception:
                print("元素定位失败：通过" + args[0] + "定位元素是:" + args[1])


        def test01_login(self):
            username_loc = (By.ID,"user_namesss")
            self.location_element(username_loc).send_keys("admin")
            time.sleep(10)


        def tearDowm(self) -> None:
            pass







_____________________________________________________________________________________________________________
URL转码
import urllib.request

print(urllib.request.quote("title=%E6%9F%A5%E6%9F%A5"))

print(urllib.request.unquote('title=%E6%9F%A5%E6%9F%A5'))